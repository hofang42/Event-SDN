<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Register for Events - Event Management System</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link href="/css/style.css" rel="stylesheet" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="container">
        <a class="navbar-brand" href="/">
          <svg
            width="32"
            height="32"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="me-2"
          >
            <path
              d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"
              fill="url(#gradient)"
            />
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop
                  offset="0%"
                  style="stop-color: #6366f1; stop-opacity: 1"
                />
                <stop
                  offset="100%"
                  style="stop-color: #4f46e5; stop-opacity: 1"
                />
              </linearGradient>
            </defs>
          </svg>
          Event Management System
        </a>
        <div class="navbar-nav ms-auto">
          <span class="navbar-text me-3">
            <i class="bi bi-person-circle me-1"></i>
            Welcome, <strong><%= user.username %></strong>
            <span class="badge bg-primary ms-2">Student</span>
          </span>
          <a class="nav-link" href="/cancel-registration">
            <i class="bi bi-calendar-check me-1"></i>My Registrations
          </a>
          <a class="nav-link" href="/logout">
            <i class="bi bi-box-arrow-right me-1"></i>Logout
          </a>
        </div>
      </div>
    </nav>

    <div class="container mt-4">
      <!-- Hero Section -->
      <div class="hero-section fade-in-up">
        <h1><i class="bi bi-calendar-event me-3"></i>Available Events</h1>
        <p class="lead">
          Discover and register for exciting upcoming events at FPT University
        </p>
        <div class="mt-3">
          <span class="badge bg-light text-dark me-2">
            <i class="bi bi-people me-1"></i><%= events ? events.length : 0 %>
            Events Available
          </span>
        </div>
      </div>

      <!-- Events Grid -->
      <% if (events && events.length > 0) { %>
      <div class="row g-4">
        <% events.forEach(function(event, index) { %>
        <div class="col-md-6 col-lg-4">
          <div
            class="card h-100 fade-in-up"
            style="animation-delay: <%= index * 0.1 %>s"
          >
            <div
              class="card-header d-flex justify-content-between align-items-center"
            >
              <h5 class="card-title mb-0 text-truncate">
                <i class="bi bi-calendar-event me-2 text-primary"></i>
                <%= event.name %>
              </h5>
              <span class="badge bg-primary">
                <i class="bi bi-people me-1"></i><%= event.capacity %>
              </span>
            </div>
            <div class="card-body">
              <p class="card-text text-muted mb-3">
                <i class="bi bi-chat-quote me-2"></i>
                <%= event.description %>
              </p>

              <div class="list-group list-group-flush mb-3">
                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-calendar-date text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Date</small>
                    <strong
                      ><%= new Date(event.date).toLocaleDateString('en-US', {
                      weekday: 'long', year: 'numeric', month: 'long', day:
                      'numeric' }) %></strong
                    >
                  </div>
                </div>

                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-clock text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Time</small>
                    <strong
                      ><%= new Date(event.date).toLocaleTimeString('en-US', {
                      hour: '2-digit', minute: '2-digit' }) %></strong
                    >
                  </div>
                </div>

                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-geo-alt text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Location</small>
                    <strong><%= event.location %></strong>
                  </div>
                </div>
              </div>
            </div>
            <div class="card-footer bg-transparent border-top-0">
              <button
                class="btn btn-primary w-100"
                onclick="registerForEvent('<%= event._id %>', '<%= event.name %>')"
                data-event-id="<%= event._id %>"
              >
                <i class="bi bi-plus-circle me-2"></i>
                <span class="btn-text">Register for Event</span>
                <span class="btn-loading d-none">
                  <span
                    class="spinner-border spinner-border-sm me-2"
                    role="status"
                    aria-hidden="true"
                  ></span>
                  Registering...
                </span>
              </button>
            </div>
          </div>
        </div>
        <% }); %>
      </div>
      <% } else { %>
      <!-- No Events State -->
      <div class="text-center fade-in-up">
        <div class="card border-0 bg-light">
          <div class="card-body py-5">
            <div class="mb-4">
              <svg
                width="80"
                height="80"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M19 3H5C3.89 3 3 3.89 3 5V19C3 20.11 3.89 21 5 21H19C20.11 21 21 20.11 21 19V5C21 3.89 20.11 3 19 3ZM19 19H5V9H19V19ZM19 7H5V5H19V7Z"
                  fill="#6366f1"
                />
                <path
                  d="M7 11H9V13H7V11ZM11 11H13V13H11V11ZM15 11H17V13H15V11ZM7 15H9V17H7V15ZM11 15H13V17H11V15ZM15 15H17V17H15V15Z"
                  fill="#6366f1"
                />
              </svg>
            </div>
            <h4 class="text-muted mb-3">No Events Available</h4>
            <p class="text-muted mb-4">
              There are currently no events available for registration. Check
              back later for new events!
            </p>
            <button class="btn btn-outline-primary" onclick="location.reload()">
              <i class="bi bi-arrow-clockwise me-2"></i>Refresh Page
            </button>
          </div>
        </div>
      </div>
      <% } %>

      <!-- Action Buttons -->
      <div class="text-center mt-5 fade-in-up">
        <a href="/cancel-registration" class="btn btn-outline-primary btn-lg">
          <i class="bi bi-calendar-check me-2"></i>View My Registrations
        </a>
      </div>
    </div>

    <!-- Success Modal -->
    <div
      class="modal fade"
      id="successModal"
      tabindex="-1"
      aria-labelledby="successModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-success text-white">
            <h5 class="modal-title" id="successModalLabel">
              <i class="bi bi-check-circle me-2"></i>Registration Successful
            </h5>
            <button
              type="button"
              class="btn-close btn-close-white"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body" id="successModalBody">
            <!-- Success message will be inserted here -->
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-success"
              data-bs-dismiss="modal"
            >
              <i class="bi bi-check me-2"></i>Continue
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Error Modal -->
    <div
      class="modal fade"
      id="errorModal"
      tabindex="-1"
      aria-labelledby="errorModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-danger text-white">
            <h5 class="modal-title" id="errorModalLabel">
              <i class="bi bi-exclamation-triangle me-2"></i>Registration Failed
            </h5>
            <button
              type="button"
              class="btn-close btn-close-white"
              data-bs-dismiss="modal"
              aria-label="Close"
            ></button>
          </div>
          <div class="modal-body" id="errorModalBody">
            <!-- Error message will be inserted here -->
          </div>
          <div class="modal-footer">
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              <i class="bi bi-x me-2"></i>Close
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="mt-5">
      <div class="container">
        <div class="text-center">
          <p class="mb-0">
            <i class="bi bi-heart-fill text-danger me-1"></i>
            © 2025 FPT University Da Nang. All rights reserved.
          </p>
        </div>
      </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/toastify-js"
    ></script>
    <script>
      // Show toast notification
      function showToast(message, type = "info") {
        const backgroundColor =
          type === "success"
            ? "#10b981"
            : type === "error"
            ? "#ef4444"
            : type === "warning"
            ? "#f59e0b"
            : "#06b6d4";

        Toastify({
          text: message,
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: backgroundColor,
          stopOnFocus: true,
          close: true,
          style: {
            borderRadius: "8px",
            fontFamily: "Inter, sans-serif",
            fontWeight: "500",
          },
        }).showToast();
      }

      // Show modal
      function showModal(type, title, message) {
        const modalId = type === "error" ? "errorModal" : "successModal";
        const bodyId = type === "error" ? "errorModalBody" : "successModalBody";
        const labelId =
          type === "error" ? "errorModalLabel" : "successModalLabel";

        document.getElementById(labelId).textContent = title;
        document.getElementById(bodyId).textContent = message;

        const modal = new bootstrap.Modal(document.getElementById(modalId));
        modal.show();
      }

      async function registerForEvent(eventId, eventName) {
        const button = event.target.closest("button");
        const btnText = button.querySelector(".btn-text");
        const btnLoading = button.querySelector(".btn-loading");

        try {
          // Show loading state
          btnText.classList.add("d-none");
          btnLoading.classList.remove("d-none");
          button.disabled = true;

          const response = await fetch("/api/registration", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ eventId: eventId }),
          });

          const result = await response.json();

          if (response.ok) {
            // Show success toast and modal
            showToast(
              `Successfully registered for ${eventName}! 🎉`,
              "success"
            );
            showModal(
              "success",
              "Registration Successful",
              `You have been successfully registered for "${eventName}". You will receive a confirmation email shortly.`
            );

            // Reload page after a short delay
            setTimeout(() => {
              location.reload();
            }, 2000);
          } else {
            // Show error toast and modal
            showToast(`Registration failed: ${result.message}`, "error");
            showModal(
              "error",
              "Registration Failed",
              `Unable to register for "${eventName}". ${result.message}`
            );
          }
        } catch (error) {
          // Show error toast and modal
          showToast("Network error occurred", "error");
          showModal(
            "error",
            "Network Error",
            "An error occurred while connecting to the server. Please check your internet connection and try again."
          );
          console.error("Error:", error);
        } finally {
          // Reset button state
          btnText.classList.remove("d-none");
          btnLoading.classList.add("d-none");
          button.disabled = false;
        }
      }

      // Show any existing messages from server
      var serverMessage =
        '<%= typeof message !== "undefined" && message ? message : "" %>';
      var serverError =
        '<%= typeof error !== "undefined" && error ? error : "" %>';

      if (serverMessage) {
        showToast(serverMessage, "success");
      }

      if (serverError) {
        showToast(serverError, "error");
      }

      // Add staggered animation to cards
      document.addEventListener("DOMContentLoaded", function () {
        const cards = document.querySelectorAll(".card");
        cards.forEach((card, index) => {
          card.style.animationDelay = `${index * 0.1}s`;
        });
      });
    </script>
  </body>
</html>
