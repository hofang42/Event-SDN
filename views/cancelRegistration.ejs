<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Registrations - Event Management System</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link href="/css/style.css" rel="stylesheet" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light">
      <div class="container">
        <a class="navbar-brand" href="/">
          <svg
            width="32"
            height="32"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class="me-2"
          >
            <path
              d="M12 2L13.09 8.26L20 9L13.09 9.74L12 16L10.91 9.74L4 9L10.91 8.26L12 2Z"
              fill="url(#gradient)"
            />
            <defs>
              <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop
                  offset="0%"
                  style="stop-color: #6366f1; stop-opacity: 1"
                />
                <stop
                  offset="100%"
                  style="stop-color: #4f46e5; stop-opacity: 1"
                />
              </linearGradient>
            </defs>
          </svg>
          Event Management System
        </a>
        <div class="navbar-nav ms-auto">
          <span class="navbar-text me-3">
            <i class="bi bi-person-circle me-1"></i>
            Welcome, <strong><%= user.username %></strong>
            <span class="badge bg-primary ms-2">Student</span>
          </span>
          <a class="nav-link" href="/register-event">
            <i class="bi bi-calendar-plus me-1"></i>Register Events
          </a>
          <a class="nav-link" href="/logout">
            <i class="bi bi-box-arrow-right me-1"></i>Logout
          </a>
        </div>
      </div>
    </nav>

    <div class="container mt-4">
      <!-- Hero Section -->
      <div class="hero-section fade-in-up">
        <h1><i class="bi bi-calendar-check me-3"></i>My Registrations</h1>
        <p class="lead">View and manage your event registrations</p>
        <div class="mt-3">
          <span class="badge bg-light text-dark me-2">
            <i class="bi bi-calendar-event me-1"></i><%= registrations ?
            registrations.length : 0 %> Registrations
          </span>
        </div>
      </div>

      <!-- Registrations Grid -->
      <% if (registrations && registrations.length > 0) { %>
      <div class="row g-4">
        <% registrations.forEach(function(registration, index) { %>
        <div class="col-md-6 col-lg-4">
          <div
            class="card h-100 fade-in-up"
            style="animation-delay: <%= index * 0.1 %>s"
          >
            <div
              class="card-header d-flex justify-content-between align-items-center"
            >
              <h5 class="card-title mb-0 text-truncate">
                <i class="bi bi-calendar-event me-2 text-primary"></i>
                <%= registration.eventId.name %>
              </h5>
              <span class="badge bg-success">
                <i class="bi bi-check-circle me-1"></i>Registered
              </span>
            </div>
            <div class="card-body">
              <div class="list-group list-group-flush mb-3">
                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-calendar-date text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Event Date</small>
                    <strong
                      ><%= new
                      Date(registration.eventId.date).toLocaleDateString('en-US',
                      { weekday: 'long', year: 'numeric', month: 'long', day:
                      'numeric' }) %></strong
                    >
                  </div>
                </div>

                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-clock text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Event Time</small>
                    <strong
                      ><%= new
                      Date(registration.eventId.date).toLocaleTimeString('en-US',
                      { hour: '2-digit', minute: '2-digit' }) %></strong
                    >
                  </div>
                </div>

                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-geo-alt text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Location</small>
                    <strong><%= registration.eventId.location %></strong>
                  </div>
                </div>

                <div class="list-group-item d-flex align-items-center">
                  <i class="bi bi-calendar-check text-primary me-3"></i>
                  <div>
                    <small class="text-muted d-block">Registration Date</small>
                    <strong
                      ><%= new
                      Date(registration.registrationDate).toLocaleDateString('en-US',
                      { year: 'numeric', month: 'short', day: 'numeric' })
                      %></strong
                    >
                  </div>
                </div>
              </div>
            </div>
            <div class="card-footer bg-transparent border-top-0">
              <button
                class="btn btn-danger w-100"
                onclick="showConfirmationModal('<%= registration._id %>', '<%= registration.eventId.name %>')"
                data-registration-id="<%= registration._id %>"
              >
                <i class="bi bi-x-circle me-2"></i>
                <span class="btn-text">Cancel Registration</span>
                <span class="btn-loading d-none">
                  <span
                    class="spinner-border spinner-border-sm me-2"
                    role="status"
                    aria-hidden="true"
                  ></span>
                  Cancelling...
                </span>
              </button>
            </div>
          </div>
        </div>
        <% }); %>
      </div>
      <% } else { %>
      <!-- No Registrations State -->
      <div class="text-center fade-in-up">
        <div class="card border-0 bg-light">
          <div class="card-body py-5">
            <div class="mb-4">
              <svg
                width="80"
                height="80"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M9 12L11 14L15 10M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z"
                  stroke="#6366f1"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                />
              </svg>
            </div>
            <h4 class="text-muted mb-3">No Registrations Found</h4>
            <p class="text-muted mb-4">
              You haven't registered for any events yet. Start exploring
              available events!
            </p>
            <a href="/register-event" class="btn btn-primary btn-lg">
              <i class="bi bi-calendar-plus me-2"></i>Browse Events
            </a>
          </div>
        </div>
      </div>
      <% } %>

      <!-- Action Buttons -->
      <div class="text-center mt-5 fade-in-up">
        <a href="/register-event" class="btn btn-outline-primary btn-lg">
          <i class="bi bi-calendar-plus me-2"></i>Browse More Events
        </a>
      </div>
    </div>

    <!-- Footer -->
    <footer class="mt-5">
      <div class="container">
        <div class="text-center">
          <p class="mb-0">
            <i class="bi bi-heart-fill text-danger me-1"></i>
            Â© 2025 FPT University Da Nang. All rights reserved.
          </p>
        </div>
      </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/toastify-js"
    ></script>
    <script>
      // Global variables for current cancellation
      let currentRegistrationId = null;
      let currentEventName = null;

      // Show toast notification
      function showToast(message, type = "info") {
        const backgroundColor =
          type === "success"
            ? "#10b981"
            : type === "error"
            ? "#ef4444"
            : type === "warning"
            ? "#f59e0b"
            : "#06b6d4";

        Toastify({
          text: message,
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: backgroundColor,
          stopOnFocus: true,
          close: true,
          style: {
            borderRadius: "8px",
            fontFamily: "Inter, sans-serif",
            fontWeight: "500",
          },
        }).showToast();
      }

      // Show confirmation modal
      function showConfirmationModal(registrationId, eventName) {
        currentRegistrationId = registrationId;
        currentEventName = eventName;

        const message = `Are you sure you want to cancel your registration for "${eventName}"? This action cannot be undone.`;

        // Create modal dynamically
        const modalHtml = `
          <div class="modal fade" id="confirmationModal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
              <div class="modal-content">
                <div class="modal-header bg-warning text-dark">
                  <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle me-2"></i>Confirm Cancellation
                  </h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">${message}</div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x me-2"></i>Keep Registration
                  </button>
                  <button type="button" class="btn btn-danger" onclick="cancelRegistration()">
                    <i class="bi bi-check me-2"></i>Yes, Cancel Registration
                  </button>
                </div>
              </div>
            </div>
          </div>
        `;

        // Remove existing modal if any
        const existingModal = document.getElementById("confirmationModal");
        if (existingModal) {
          existingModal.remove();
        }

        // Add new modal to body
        document.body.insertAdjacentHTML("beforeend", modalHtml);

        // Show modal
        const modal = new bootstrap.Modal(
          document.getElementById("confirmationModal")
        );
        modal.show();
      }

      async function cancelRegistration() {
        if (!currentRegistrationId || !currentEventName) return;

        const button = document.querySelector(
          `[data-registration-id="${currentRegistrationId}"]`
        );
        const btnText = button.querySelector(".btn-text");
        const btnLoading = button.querySelector(".btn-loading");

        try {
          // Show loading state
          btnText.classList.add("d-none");
          btnLoading.classList.remove("d-none");
          button.disabled = true;

          const response = await fetch(
            `/api/registrations/${currentRegistrationId}`,
            {
              method: "DELETE",
              headers: { "Content-Type": "application/json" },
            }
          );

          const result = await response.json();

          if (response.ok) {
            showToast(
              `Successfully cancelled registration for ${currentEventName}! â`,
              "success"
            );
            setTimeout(() => location.reload(), 2000);
          } else {
            showToast(`Cancellation failed: ${result.message}`, "error");
          }
        } catch (error) {
          showToast("Network error occurred", "error");
          console.error("Error:", error);
        } finally {
          // Reset button state
          btnText.classList.remove("d-none");
          btnLoading.classList.add("d-none");
          button.disabled = false;

          // Close modal
          const modal = bootstrap.Modal.getInstance(
            document.getElementById("confirmationModal")
          );
          if (modal) modal.hide();
        }
      }

      // Show any existing messages from server
      var serverMessage =
        '<%= typeof message !== "undefined" && message ? message : "" %>';
      var serverError =
        '<%= typeof error !== "undefined" && error ? error : "" %>';

      if (serverMessage) {
        showToast(serverMessage, "success");
      }

      if (serverError) {
        showToast(serverError, "error");
      }

      // Add staggered animation to cards
      document.addEventListener("DOMContentLoaded", function () {
        const cards = document.querySelectorAll(".card");
        cards.forEach((card, index) => {
          card.style.animationDelay = `${index * 0.1}s`;
        });
      });
    </script>
  </body>
</html>
